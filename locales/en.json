{
  "settings": {
    "title": "PiggyBank Settings",
    "subtitle": "Power settings",
    "loadingText": "Please wait a few seconds while devices are being loaded...",
    "sponsoredBy": "This app is sponsored by:",
    "sponsorText": "Your company logo here?<br>Contact the developer.",
    "app": {
      "activeted": "The app is",
      "enabled": "App enabled",
      "disabled": "App disabled",
      "activationHint1": "Before you activate the app, please completa all actions in the todo list below.",
      "activationHint2": "Note: To avoid conflicting settings you should carefully make sure no external flows are working against this app before before activating it.",
      "maxPowHint": "The maximum power can also be changed with flows for example when different maximums are wanted during winter and summer time.",
      "maxAlarmRateHint": "Max power shortage is a quality assurance to make sure you don't cross the power ceiling when the power meter is malfunctioning. It is not recommended to turn this off unless you do not care about the maximum power. As long as the power meter is working, this setting will have no effect, but if the app does not receive a power report from the power meter, it will enter a limiting state after 1 minute. In this state, it will turn off devices. When the time without a reported effect exceeds the specified % of the tariff interval, the restriction will cease and everything will be turned on again. Preferably start with 50% and increase it if you see that the power ceiling is crossed because your power meter is unreliable.",
      "myTasks": "The App State"
    },
    "schedule": {
      "onoff": "OnOff operation",
      "temp": "Temperature",
      "notemp": "No temp control",
      "statictemp": "Constant temp",
      "pricetemp": "Price controlled",
      "schedule": "Current schedule",
      "schedules": "Schedules",
      "new": "New",
      "remove": "Remove",
      "noneSelected": "&larr; Please select an interval to edit.",
      "maxHours": "Hours On",
      "operations": {
        "alwaysOn": "Always On",
        "alwaysOff": "Always Off",
        "controlledOn": "Preferred On",
        "controlledOnCheapest": "Cheapest X hours",
        "controlledOff": "On until Off",
        "ignore": "Ignore"
      },
      "opHelp": {
        "alwaysOn": "Affected units are never turned off. The Power tariff is met by controlling temperatures. Please do not use this to control relays as the power tariff cannot be met when they cannot be turned off.",
        "alwaysOff": "Affected units are kept off no matter what.",
        "controlledOn": "Affected units are on as much as possible. They can be turned off to keep the power tariff. If devices are being turned off they will turn on again when sufficient power is available. Thermostat devices will change temperature instead of turning on/off.",
        "controlledOnCheapest": "Similar to 'Preferred On' except that it is only on in the cheapest X hours.",
        "controlledOff": "Similar to 'Preferred On' except for devices turned off will not be turned on again. Thermostat devices will act as 'Preferred On'",
        "ignore": "Affected units will not turn on or off. If it is on then the temperature will be controlled, if it's off then nothing will happen."
      },
      "hint": {
        "onOffOperation": "<p>The on/off operations are as follows:</p>",
        "tempOp": ["<p>When temperature control is enabled then Temperatures are preferred to control the power tariff rather than on/off. If temperature control is disabled then only on/off operations will be used to control the power tariff.</p><!--",
            "--><p>Fixed temperatures are good when you have fixed electricity prices while price-controlled temperatures allow you to set a range of temperatures depending on the prices.</p>"],
        "ACMode": ["<p>This is only applicable for AC devices. If the device being controlled is an AC device the mode will change as set here (as long as the device supports the available mode).</p><!--",
            "--><p><b>Heating</b>: Will use the temperature range set for heating. When insufficient power the minimum temperature is set.</p><!--",
            "--><p><b>Cooling</b>: Will use the temperature range set for cooling. When insufficient power the maximum temperature is set.</p><!--",
            "--><p><b>Auto</b>: Sets a single temperature. Will use On/Off to meet the power tariff</p><!--",
            "--><p><b>Fan / Dry</b>: No temperatures. Will use On/Off to meet the power tariff</p><!--",
            "--><p><b>Piggy</b>: This will switch between heating and cooling depending on the actual temperature. The temperature triggers for switching mode is the one set for 'normal prices'.</p><!--",
            "--><p><b>Unchanged</b>: This mode will not change your AC mode at all. It will detect the current Mode and act accordingly.</p>"],
        "myThermo": ["<p>The temperature wheel allows you to set up to 12 different temperatures. Only those that are applicable to the settings you have chosen will be visible.</p><!--",
            "--><p>'Off temperature' is the temperature used when trying to keep the power tariff. There is one off temperature when heating is enabled and another one when cooling is enabled.</p><!--",
            "--><p>'Heating temperature range' There are up to 5 temperatures that can be set for heating. The lowest is used when the prices are high while the highest is used when the prices are low.</p><!--",
            "--><p>'Cooling temperature range' There are up to 5 temperatures that can be set for cooling. The lowest is used when the prices are low while the highest is used when the prices are high.</p>"]
      }
    },
    "charge": {
      "header": "Car chargers",
      "chargeTarget": "Charge control",
      "chargeMin": "Minimum charge power",
      "chargeThreshold": "Start threshold",
      "minToggleTime": "Minimum toggle time",
      "chargeRemaining": "Remaining energy",
      "chargeEnd": "Charge cycle end time",
      "chargeTargetAuto": "Fully automated",
      "chargeTargetFlow": "Flow controlled",
      "carChargerMissingHint": "No supported charger found. You must use a flow card to charge.",
      "carChargerNotAddedHint": "A supported charger was found, but it has not been added as a controllable device.",
      "chargeTargetHint": ["Supported chargers are controlled by the app automatically provided they are added as a controllable device. For unsupported chargers you can either use flow cards or send a <a href=\"ShowLog\" onclick=\"changeTab(event, 'logPage');return false;\">device report</a>. <!--",
          "--><p>Please note that chargers listed under <a href=\"ShowDevices\" onclick=\"changeTab(event, 'helpSupportedPage');return false;\">ignored devices</ a> must be managed via flows.</p><!--",
          "--><p>To control via flows, you must connect to the following triggers in the app: 'Start charging' and 'Stop charging', while 'Change charging power' is optional but reccomended.</p><!--",
          "--><p>In order to start the charging process you must call the flow card action 'Start charging cycle'.</p>"],
      "chargeMinHint": "The minimum charging current indicates the charging power your charger uses when you switch it on. If the charger only has one setting, enter it here. If the charger can control the current, enter the minimum power it can draw. To increase the value, the threshold for charging start must possibly be increased first, as this cannot be exceeded to protect the charger.",
      "chargeThresholdHint": "A new charging cycle only starts when the idle power exceeds the threshold value set here. This must be slightly more than the minimum charging current to avoid the charger switching off again straight away.",
      "minToggleTimeHint": "This value indicates in seconds how long it is between each time a signal is sent to the charger. If the response time of the charger exceeds this value, this value should be increased accordingly.",
      "chargeRemainingHint": "This value shows how much power will be offered to the charger before the app stops charging. This energy will be distributed over all the remaining time until the end of the charging cycle. You cannot set this value here, it must be set from the 'Start charge cycle' flowchart.",
      "chargeEndHint": "This field shows when the current charging cycle will end. You cannot set this value here, it must be set from the 'Start charge cycle' flowchart.",
      "override": "Override",
      "overrideHint": "Initially, the charging should work without override. In some situations, it may still be desirable to change this.",
      "overrideHintStart": "The starting current is the current offered when the charger used 0W before and is in a charging cycle. (To get 3-phase charging, the minimum starting current must be 11A)",
      "overrideHintStop": "The stop current is the current offered when there is no charge cycle. (NB! This will not be attempted to be adjusted)",
      "overrideHintPause": "The pause current is the current offered when there is a charge cycle and the price is too expensive.",
      "overrideHintMin": "Minimum charging current ensures that you never charge with less current than this. (Varies from car to car. Can be less than 11A for 3-phase charging)",
      "overrideHintMax": "Maximum charging current ensures that you never charge with more current than this. (An additional safeguard against overconsumption when the Homey or Easee api misbehaves)",
      "overrideEnable": "Override",
      "overrideEnableNo": "Disabled",
      "overrideEnableYes": "Enabled",
      "overrideStart": "Start current",
      "overrideStop": "Stop current",
      "overridePause": "Pause current",
      "overrideMinCurrent": "Minimum charging current",
      "overrideMaxCurrent": "Maximum charging current"
    },
    "menu": {
      "home": {
        "title": "Home"
      },
      "devices": {
        "title": "Devices",
        "meterReader": "Meter Reader",
        "controllable": "Controllable devices",
        "modes": "Modes and priority",
        "prices": "Price management"
      },
      "advanced": {
        "title": "Advanced",
        "cost": "Cost settings",
        "settings": "Advanced settings",
        "charger": "Car chargers",
        "frost": "Frost guard",
        "override": "Override",
        "backup": "Backup",
        "timetable": "Time Schedule"
      },
      "help": {
        "title": "Help",
        "wiz": "First time Wizzard",
        "notfound": "The app can't find my device",
        "debug": "Debug",
        "supported": "Supported Devices",
        "about": "About"
      }
    },
    "pricetab": {
      "dirtcheap": "Dirt cheap",
      "cheap": "Cheap",
      "normal": "Normal",
      "expensive": "Expensive",
      "extreme": "Extreme"
    },
    "opMode": {
      "normal": "Day",
      "night": "Night",
      "holiday": "Vacation",
      "custom": "Custom"
    },
    "welcome": {
      "remaining": "Remaining tasks",
      "taskEnableApp": "The app must be enabled in order to save money.",
      "taskCreateEnergyFlow": "Please connect the output of the house energy meter to the energy input of this app. <a href=\"meterPage\" onclick=\"changeTab(event, 'meterPage');return false;\">See here for details</a>.",
      "taskEnergyFlowRate": "The rate of which the energy meter is reporting the energy is very low (last signal received ${interval} minutes ago). Please increase the rate if possible.",
      "taskChargerNotEnabled": "You have started a charge cycle without a supported charger set to controllable in the app. You either have to select the charger as controllable or you have to set the charging control to flow cards.",
      "taskNoPriceFlow": "Your setting indicate prices should come from a flow, but no such flow seem to be active",
      "taskNoPriceAPI": "You have chosen to fetch prices from an external app, which require the app 'Norwegian Electricity Bill' to be installed, but it can not be found or the version is too old. Maybe you should use the setting spot price instead.",
      "taskNoPriceAPIDevice": "Your choice to fetch prices from an external app require the app 'Norwegian Electricity Bill' to be installed. The app is found but prices can only be retrieved when the apps corresponding device has been installed.",
      "taskNoPriceAPIData": "You have chosen to fetch prices from an external app, but the 'Norwegian Electricity Bill' app has been configured for price from flows, and as such it will not forward the prices to this app...",
      "taskNoPriceEnabled": "You have not activated price management yet. This could possibly save you some more money.",
      "taskNoPrices": "No future prices are available. Forces price point to Normal price until the situation has been resolved.",
      "taskYesPrices": "Future prices are available again.",
      "taskDisableLogging": "You have enabled extended logging, which slows down the app significantly. Please disable extended logging for better performance.",
      "taskExperimental" : ["You have chosen to control a unit that the app has not been verified to handle. <!--",
          "-->Please <a href=\"ShowLog\" onclick=\"changeTab(event, 'logPage');return false;\">report</a> the status <!--",
          "-->for this device to the developer in order to get any problems fixed and this message removed."],
      "taskSpookey": "Your charger has mysteriously changed status ${times} times since the start of the last charge cycle. Please disable all other sources that attempt to control the charger.",
      "taskNone": "Well done, the app is correctly configured.",
      "errorDevices": "The following devices are very unreliable, please follow the instructions when clicking on them to improve reliability.",
      "reliability": "Reliability",
      "reliabilityHelp": ["The wireless signals might be weak. Please try to improve the line of sight to homey, <!--",
          "-->boost the signal or making sure there are sufficient repeaters in the signal grid. This might enhance its reliability. <!--",
          "-->If you believe the device is reliabile already and that the issues lies within this app <!--",
          "-->please submit a <a href=\"ShowLog\" onclick=\"changeTab(event, 'logPage');return false;\">device report.</a>"]
    },
    "global": {
      "controlTemp": "Allow temperature control",
      "controlTempYes": "Yes",
      "controlTempNo": "No",
      "controlTempPreferred": "Preferred",
      "controlTempHint": "<p>No - Will only control on/off.</p><p>Yes - Uses on/off to keep power tariff, temperatures are set according to the current preferences.</p><p>Preferred - Avoid using on/off where possible, temperatures are set to min/max depending on heating/cooling when trying to keep the power tariff, otherwise according to the current preferences.</p>",
      "settings": "Global Settings",
      "errorMargin" : "Error Margin",
      "errorMarginHint1" : "Ensure that you always end up a bit below the effect tariff.",
      "errorMarginHint2" : "Hint: This give you room for a minor overuse another day as the tariff is based on a 3 day average.",
      "safetyPower" : "Reserved power",
      "safetyPowerHint1" : "Avoid failing the power target by reserving power to uncontrollable devices.",
      "safetyPowerHint2" : "Hint: You can use flow cards to change the reserved power during the day. It is reccomended to reserve more power before making dinner.",
      "crossSlotSmooth" : "Time window Smoothing",
      "crossSlotSmoothHint" : "This feature allow you to over-use power at the beginning of every time window. The amount given will be added to the allowed power usage at the beginning of every time slot and gradually reduced to 0 at the end of every slot.",
      "mainFuse" : "Main fuse",
      "mainFuseHint" : "The main fuse is important for what is calculated as the maximum available power. The app will not let you use more power than the main fuse allows.",
      "freeThreshold": "Free capacity threshold",
      "freeThresholdHint": "Free power will only be reported if the indicated amount of controllable units are switched on. This can be used to give priority to devices that are controlled outside the app, such as charging an electric car. 0% will give the highest priority while 100% will give the lowest priority.",
      "controllableDevices": "Controllable devices",
      "deviceListHint1" : "Only selected devices can be controlled by the app. If your device is not listed then follow the instructions in the Help panel.",
      "deviceListHint2" : "Tip: For optimal control, ensure that heavy adjustable current draws are set to a power that does not exceed the desired power tariff. Otherwise it will result in frequent switching on/off.",
      "missing" : "Missing or broken device?",
      "problemsolver" : "Troubleshoot",
      "toggleTime": "Toggle time:",
      "toggleTimeHint": "After changing a device state, the app will wait to change other devices until: <ul style='font-size:1em'><li>The change has been registered or</li><li>The toggle time has expired</li></ul>If you have devices with slow response times like cloud devices, then it is recommended to use a longer toggle time to avoid toggling too many devices.",
      "countryHint": "<p>Only Norway and Belgium have built in support. Other countries may or may not work. Contact the developer if additional changes are needed</p><p>Note that all statistics and graphs are cleared if you change the country.</p>"
    },
    "cost" : {
      "schema": "Schema",
      "header": "Cost settings",
      "surcharge": "Surcharge electricity provider",
      "currency": "Currency",
      "VAT": "VAT",
      "gridTaxDay": "Grid charge 06-22",
      "gridTaxNight": "Grid charge 22-06",
      "gridLimit": "Capacity step (Wh)",
      "gridCost": "Monthly cost",
      "gridLimitHint": "If you configure the cost per capacity step according to your grid provider, then your montly savings will be correctly calculated.",
      "enabled": "Active",
      "limit": "Limit",
      "peakStart": "Peak start",
      "peakEnd": "Peak end",
      "weekendOffPeak": "Weekend is offpeak",
      "gridSteps": "Use power steps",
      "peakMin": "Lowest max power",
      "peakTax": "Cost max power",
      "granularity": "Limiting interval",
      "granularity15": "15 min",
      "granularity60": "60 min"
    },
    "archive": {
      "settings": "Archive",
      "expireDaily": "Expire time Daily stats",
      "expireHourly": "Expire time Hourly stats",
      "expireHint": "Number of days to keep statistics with the given granularity. For Monthly and Yearly granularity the statistics are kept forever.<br><b>NB!</b> More than a few months can degrade the performance of the app."
    },
    "deviceinfo": {
      "header": "Device reporting",
      "filter": "Report",
      "noDevice": "Select report",
      "listedExperimental": "Experimental device is working",
      "listedDevice": "On/off does not work",
      "listedTempDevice": "Temperature does not work",
      "unlistedDevice": "Device is not listed / missing",
      "selector": "Device",
      "getinfo": "Get info",
      "analyze": "Generate Report",
      "noDeviceSelected": "Please select device",
      "unreliableDevice": "The selected device is only ${reliability}% reliable. Can this explain the problems you're having? If not, please include your email in the report so we can solve this together."
    },
    "meter": {
      "title": "Energy readings",
      "meterReader": "Meter reader",
      "meterReaderNotFound": "No meter reader was found, you must use a flow card to send the power consumption to the app. If you want to add support for your electricity meter, you can go to <a href=\"ShowLog\" onclick=\"changeTab(event, 'logPage');return false;\">unit reporting</a>, generate a report of the missing device and send the log to the developer.",
      "meterReaderHint": "If the app has support for your meter reader it will show up here, otherwise you have to input the power readings by using a flow",
      "useFlow": "None - Use Flow",
      "frequency": "Frequency",
      "frequencyHint": "Specifies how often the meter reading should be checked. The reccomended value is 10 seconds."
    },
    "help": {
      "notFound": "Instructions for non-supported devices",
      "notFoundHint": "<p>Unfortunately, there are some devices that do not use the standard mechanisms to be controlled. These will therefore not be detected as controllable by this app. Luckilly this can be easilly supported, just click the link below, generate a report and send the log to the developer.</p>",
      "supportedDevices": "Confirmed Supported Devices",
      "supportedDevicesHint": "If your device is not listed, please follow the instructions here:",
      "deviceTypeSwitch": "Relays",
      "deviceTypeHeater": "Heaters",
      "deviceTypeWaterHeater": "Water Heaters",
      "deviceTypeAC": "Air Conditions",
      "deviceTypeCharger": "Chargers",
      "deviceTypeIgnore": "Ignored devices",
      "deviceTypeMeter": "Meter readers",
      "ongoing": "Ongoing work",
      "aboutInfo": "About Piggy Bank",
      "aboutInfoHint": ["<p>This app was made in order for everyone to control their energy usage in a simple way and at the same time save as much money as possible on it.</p><!--",
          "--><p>A lot of free time has gone into developing this app. If you're happy with what you save then please feel free to support the development of the app in the following ways: (completely optional)</p><!--",
          "--><ol><!--",
          "-->  <li><b>For private individuals</b><!--",
          "-->      <p>You can sponsor the development of the app by donating money at <a href='https://github.com/sponsors/frodeheg'>https://github.com/sponsors/frodeheg</a></p><!--",
          "-->  </li><!--",
          "-->  <li><b>for companies</b><!--",
          "-->      <p>This page takes a few seconds to load, therefore a loading screen has been added to inform about the waiting time. This can be a good advertising space, as there is a waiting period that you cannot avoid.</p><!--",
          "-->      <p>If your company wants to make use of this great opportunity, you can contact the developer of the app.</p><!--",
          "-->  </li><!--",
          "--></ol>"]
    },
    "wizzard": {
      "welcome": "Welcome",
      "guide": "A guided tour that will show you how the app works will come here soon."
    },
    "price": {
      "header": "Price management",
      "usagePart": "Utility cost",
      "powerPart": "Grid capacity costs",
      "limitPart": "Limiter part",
      "priceMode": "Mode",
      "mode": {
        "flow": "Manually from flows",
        "internal": "Automatic",
        "disabled": "Disabled"
      },
      "priceKind": "Price kind",
      "priceKindUtil": "External",
      "priceKindSpot": "Spot price",
      "priceKindFixed": "Fixed price",
      "priceKindHint": "<p>The option 'External' retrieves the price from the app 'Norwegian Electricity Bill' if it is installed.</p><p>'Spot price' is retrieved from the European electricity exchange.</p><p>'Fixed price' allows you to enter a fixed price per kWh. The total price will still vary throghout the day due to grid cost.</p>",
      "fixed": "Fixed price",
      "spotPrice": {
        "country": "Country",
        "region": "Price Region"
      },
      "buttons": {
        "help": "Frost guard and zone control will override all actions. Frost guard will override everything with a thermostat and zone control turns off everything without frost guard. Other than that the actions have the following effect",
        "helpOn": "On when sufficient power, otherwize off",
        "helpOff": "Turn off",
        "helpDelta": "Turn on and change temp, but only if sufficient power",
        "helpEmergency": "Turn off only as a last resort to get below the power tariff (no frost guard)",
        "helpIgnore": "Ignore the unit completely (no frost guard)"
      },
      "actionDirtCheap": "Actions when the energy is dirt cheap",
      "actionLow": "Actions when the energy is cheap",
      "actionHigh": "Actions when the energy is expensive",
      "actionExtreme": "Actions when the energy is extremely expensive",
      "actionNormal": "Actions when the price is normal",
      "priceHint1": ["<p>The Mode allows you to choose whether to feed the app with manually crafted price points or if the price points should be set automatically. If neither is used (deactivated) then the app will only control max power.</p><!--",
      "--><p>Manual control from flow cards give you greatest flexibility but leave all the responsibility to interpret the electricity price to you.</p><!--",
      "--><p>Automatic interprets the prices according to the preferences set in the app.</p>"],
      "priceErr1": "Note! You have to install the app 'Norwegian Electricity Bill' and acompanying device for external prices to be fetched. The prices are fetched seamlessly, flow cards are not necessary.",
      "pricePointAdvanced": "Price point magic",
      "pricePoint": "Price point",
      "pricePointHint": "The behaviour of each price point is defined below. Price points can be changed by using flows.",
      "action": "Action",
      "delta": "Delta",
      "deltaTemp": "Change temp",
      "turnOn": "Turn on",
      "turnOff": "Turn off",
      "emergencyOff": "Off if needed",
      "ignore": "Ignore",
      "internal": {
        "minCheapTime": "Minimum amount of cheap hours",
        "minCheapTimeHint": "Regardless of the actual price, you can demand that the x cheapest hours of the day always set the price point to cheap.",
        "minExpensiveTime": "Minimum amount of expensive hours",
        "minExpensiveTimeHint": "Regardless of the actual price, you can demand that the x most expensive hours of the day should always set the price point to expensive.",
        "dirtCheapPriceModifier": "Limit for dirt cheap price",
        "dirtCheapPriceModifierHint": "If the current hourly price falls x% below the basis for price comparison, the price point is always set to Dirt cheap",
        "lowPriceModifier": "Limit for cheap price",
        "lowPriceModifierHint": "If the current hourly price falls x% below the basis for price comparison, the price point is always set to Cheap",
        "highPriceModifier": "Limit for expensive price",
        "highPriceModifierHint": "If the current hourly price is x% above the basis for price comparison, the price point is always set to Expensive",
        "extremePriceModifier": "Limit for extreme prices",
        "extremePriceModifierHint": "If the current hourly price is x% above the basis for price comparison, the price point is always set to Extremely Expensive",
        "averageTime": "Basis for price comparison",
        "averageTimeHint": "Whether a price is expensive or cheap is determined by seeing if it is x% above/below the average price in the previous X and next Y hours. If X+Y<1 then the average price today is used.",
        "prev": "Prev",
        "next": "Next",
        "hours": "timer"
      }
    },
    "frost": {
      "header": "Frost Control",
      "minTemp": "Minimum temperature per device",
      "frostHint": "If the temperature for one unit falls below the minimum allowed temperature then the unit will be turned on independent of any other power control."
    },
    "zone": {
      "header": "Zone Control",
      "zoneHint": "The purpose of zones is to completely disable all heating/cooling sources in a zone if doors or windows are open. You don't have to care about zones if you do not have door and window sensors.",
      "zoneHint2": "You have to use flows to turn zones off and on again.",
      "zonesOff": "The following zones has been forced off",
      "zonesClear": "Clear all zones",
      "zoneName": "Zone",
      "zoneNum": "Number of affected devices"
    },
    "override": {
      "header": "Overriden devices",
      "overrideHint": "Devices can be overriden in several ways:<ul><li>Through zone control (flow cards)</li><li>Through frost guard (automatic)</li><li>Through maintenance actions (in piggy bank insights)</li><li>Through per device overrides (flow cards)</li></ul>",
      "overridden": "The following devices has been overridden",
      "device": "Device",
      "status": "Overridden by",
      "on": "Forced On",
      "off": "Forced Off",
      "offUntilOn": "Maintenance (finishes when turned on manually)",
      "temp": "Manual temperature",
      "frost": "Frost guard active",
      "controlled": "Forced controlled",
      "zone": "Zone ${zone} turned off"
    },
    "mode" : {
      "activeMode" : "Active Mode",
      "operatingMode" : "Operating Mode",
      "operatingModeHint": "Hint: You can use flow cards to change operating mode.",
      "powerSettings": "Power settings",
      "powerStep" : "Step",
      "limits": "Limitations",
      "maxPower15min": "Max consumption per 15 min.",
      "maxPowerHour": "Max hourly consumption",
      "maxPowerDay": "Max daily consumption",
      "maxPowerMonth": "Max monthly consumption",
      "maxAlarmRate": "Max power shortage",
      "priorities" : "Priorities",
      "priorityHint1": "In case of excessive power consumption, the app starts turning off devices from the bottom of the list. Devices at the top of the list will be the last to be turned off.",
      "priorityHint2": "When the desired power tariff is within reach, the app will start turning on devices again.",
      "priorityHint3": "In order to prevent frequent switching on/off, the app will insert a waiting time after the last switch-off before appliances are switched on again. Therefore, set power consumption for electric car chargers roughly equal to the desired power tariff and low priority.",
      "active": "limiting",
      "noMeterPower": "Unreliable meter reader",
      "controlled": "Controlled",
      "alwaysOn": "Always On",
      "alwaysOff": "Always Off",
      "device": "Device",
      "priority": "Priority",
      "targetTemp": "Target",
      "modeName": "Mode name"
    },
    "saveButton": "Save changes",
    "alert": {
      "settingssaved": "Your changes have been saved.",
      "maxPowerChanged": "You have increased the power tariff. This may result in additional cost. Do you wish to continue?",
      "leavepage": "Do you want to leave this page?"
    },
    "log": {
      "show": "Report problem",
      "header": "Log",
      "exit": "Exit log",
      "unit": "Unit for full log",
      "unitNone": "No Unit selected",
      "level": "Other events",
      "error": "Errors Only",
      "basic": "Basic Information",
      "full": "All Information",
      "clearLog": "Clear",
      "sendLog": "Send",
      "sendConfirm": "Send the log contents to the developer?",
      "thankYou": "Thank you! (Please note that the messaging service is a bit unreliable. If you do not get any response, please try again later or use the forum)",
      "sendError": "Failed sending the log, please try again later or wait for app update. ",
      "email": "Email",
      "comment": "Comment",
      "required": "You have not generated a report or described the problem. Please generate a report or describe the problem+your email address before you submit the log."
    },
    "backup": {
      "header": "Backup",
      "text": "The backup functionality is not completed. You can retrieve the state but not set it yet.",
      "getState": "Retrieve state"
    },
    "ACMode": {
      "header": "AC Mode",
      "fromAC": "Unchanged",
      "auto": "Auto",
      "heat": "Heat",
      "cool": "Cool",
      "dry": "Dry",
      "fan": "Fan",
      "piggy": "Smart",
      "hint": "AC Mode affects all AC units (but will come per unit in a later update). If ACMode='Unchanged', the app will not set the AC mode. All other selections will set the AC mode. NB: If the AC mode is set to cooling, the delta temperatures for the price point will be inverted so that you can seamlessly switch between heating and cooling without affecting the app's ability to save money."
    }
  },
  "charger": {
    "new": {
      "deviceName": "Charge Controller",
      "infoHeader": "Charge controller info",
      "imageHeader": "Select icon",
      "info1": "This device will allow you to control a car charger with piggy.",
      "info2": "The device will have to be manually connected to the car charger by using flows.",
      "info3": "Please enter the app settings after installing this device for more help on how to connect the car charger and to test that you have connected it properly."
    },
    "warnings": {
      "noSignalAmps": "No Amp signal received from the charger",
      "noSignalWatts": "No Watt signal received from the charger",
      "noSignalBattery": "No Battery level received from the charger",
      "noStatusDisconnected": "No car disconnected signal received from the charger",
      "noStatusConnected": "No car connected signal received from the charger"
    }
  },
  "newdevice" : {
    "info": "This device will give you insight into what happens when the app controls the flow. There is no need to install this device to make the app work.",
    "info2": "As the device only works as a window into the app, you cannot therefore configure what happens through this device's settings. You can only configure what happens through the app's settings."
  },
  "warnings" : {
    "homeyApiNotResponding": "Having difficulties getting device states out of the Homey API. This problem should resolve shortly, if not contact the app developer as it might be a bug.",
    "notConfigured": "The App has not been configured properly yet, please go to the app settings page and save your preferred configuration",
    "homeyReboot": "The App is disabled for 15 minutes after a power loss was detected to help Homey to recover.",
    "notEnabled": "The App has not been activated yet. Please enter the app settings to activate the app.",
    "noDevices": "Please select at least one device to be controlled",
    "savingWait": "Saving, please wait...",
    "savingFailed": "Failed to save, This should not happen, please notify the developer so this can be fixed",
    "noPriceApi": "You have to install the app 'no.almli.utilitycost' to get the electricity prices to work. Alternatively set the price point from flows.",
    "noPriceApiDevice": "You have to install the corresponding device to the app 'no.almli.utilitycost' in order to get the electricity prices from the app. Alternatively set the price point from flows.",
    "noPriceApiData": "The Utilitycost app is set to use price from flows. Thus it will not forward the cost. Try to configure the price with the built in price function in piggy instead.",
    "notPMfromFlow": "In order to set price points with flows you first have to enable price management using flows in the app setup",
    "rememberToSave": "Remember to save!",
    "appDisabled": "The app operating mode is set to disabled. Please turn it on in app settings or with a flow.",
    "timeout": "Timeout! Homey is busy. Please wait some more, retry later or contact the App developer if the problem persist. If you're running from a browser then it usually helps to refresh the page.",
    "notValidTime": "The end time is not valid. Please use 24-hour format HH:MM (no AM/PM)",
    "meterIsAuto": "Manual inputs from Meter Readers are not allowed when a meter reader has been selected"
  },
  "breaking": {
    "maxPower": "Important change for **Piggy Bank**: Max Power is now a single global setting instead of per mode. Please check that the new setting is ok. The new setting is ",
    "fixGraph": "**Piggy Bank** update: Unfortunately, due to an error, some of you may see a much higher hourly consumption than was actually the case on certain days in the last two weeks. Days that may have been affected have been removed from the graph and thus will no longer affect the estimated monthly tariff. To know your correct tariff for this particular month, it is recommended to check at elhub.no, sorry for the inconvenience.",
    "maxAlarm": "**Piggy Bank** - Important change: To ensure that power consumption does not breach the power tariff when the meter reader is unreliable, a restriction has been added that turns off devices when power is not reported. You may need to change this setting if your meter reader is unreliable. It can be found under Advanced->Cost->Limits."
  },
  "maxUsageGraph": {
    "title": "Max Hourly usage",
    "titleQ": "Max usage per 15 min.",
    "yaxis": "kWh",
    "xaxis": "Day",
    "tariff": "Estimated power tariff",
    "highest": "Highest hourly usage",
    "highestQ": "Highest usage per 15 min.",
    "missing": "Missing data.",
    "inaccurate": "Inaccurate data.\n(Time without power: ${percent}%)",
    "incomplete": "Incomplete data, period not completed."
  },
  "chargePlanGraph": {
    "title": "Charge cycle plan",
    "yaxis": "Price per kWh",
    "price": "Price",
    "charging": "Charging enabled",
    "nocharge": "Charging disabled",
    "noPrice": "No price data yet"
  },
  "month": {
    "jan": "January",
    "feb": "February",
    "mar": "March",
    "apr": "April",
    "may": "May",
    "jun": "June",
    "jul": "July",
    "aug": "August",
    "sep": "September",
    "oct": "October",
    "nov": "November",
    "dec": "December"
  },
  "units": {
    "kWh": "kWh",
    "hours": "h"
  },
  "graph": {
    "consumption": "Usage",
    "maxhour": "MaxUse",
    "prices": "Prices",
    "savings": "Savings",
    "pricePoint": "Price point",
    "priceDistribution": "Price distribution",
    "unavailable": "Unavailable",
    "hours": "hours",
    "day": "Day",
    "month": "Month",
    "year": "Year",
    "predicted": "predicted"
  },
  "thermostat": {
    "HeatOff": "Heating off",
    "HeatExtreme": "Extremely expensive heating",
    "HeatExpensive": "Expensive heating",
    "HeatNormal": "Normal heating",
    "HeatCheap": "Cheap heating",
    "HeatDirtCheap": "Dirt cheap heating",
    "CoolDirtCheap": "Dirt cheap cooling",
    "CoolCheap": "Cheap cooling",
    "CoolNormal": "Normal cooling",
    "CoolExpensive": "Expensive cooling",
    "CoolExtreme": "Very expensive cooling",
    "CoolOff": "Cooling off",
    "whenText": "when",
    "thenText": "then"
  }
}